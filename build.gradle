plugins {
    id 'java'
    id 'application'
    id 'groovy'
    id 'jacoco'
    id 'pmd'
    id 'findbugs'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
}

repositories {
    jcenter()

    // Local maven repository for bitcoinj dependency
    mavenLocal()
}

dependencies {
    testCompile (
            'junit:junit:4.12',
            'org.codehaus.groovy:groovy-all:2.4.4',
            'org.spockframework:spock-core:1.0-groovy-2.4'
    )

    // core library from bitcoinj (ECKey, Address, etc)
    compile 'org.bitcoinj:bitcoinj-core:0.15-SNAPSHOT'

    // annotation used to suppress findbugs false positives
    compile group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'

    // parse json for test vectors
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.3'

    // logging required by bitcoinj
//    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.10.0'
//    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

}

pmd {
    ruleSets = [
            "java-basic",
            "java-braces",
            "java-clone",
            "java-codesize",
            "java-design",
            "java-empty",
            "java-finalizers",
            "java-imports",
            "java-junit",
            "java-optimizations",
            "java-strictexception",
            "java-strings",
            "java-sunsecure",
            "java-typeresolution",
            "java-unnecessary",
            "java-unusedcode"
    ]
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

mainClassName = 'com.ubrgk.crypto.App'

